//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Views.SRIPlayerManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOPlayer", Namespace="http://schemas.datacontract.org/2004/07/Logic.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOPlayer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhonenumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phonenumber {
            get {
                return this.PhonenumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonenumberField, value) != true)) {
                    this.PhonenumberField = value;
                    this.RaisePropertyChanged("Phonenumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRIPlayerManagement.IPlayerManagement")]
    public interface IPlayerManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/AuthenticateLogin", ReplyAction="http://tempuri.org/IPlayerManagement/AuthenticateLoginResponse")]
        Views.SRIPlayerManagement.DTOPlayer AuthenticateLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/AuthenticateLogin", ReplyAction="http://tempuri.org/IPlayerManagement/AuthenticateLoginResponse")]
        System.Threading.Tasks.Task<Views.SRIPlayerManagement.DTOPlayer> AuthenticateLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerManagement/RegisterPlayerResponse")]
        bool RegisterPlayer(Views.SRIPlayerManagement.DTOPlayer newPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerManagement/RegisterPlayerResponse")]
        System.Threading.Tasks.Task<bool> RegisterPlayerAsync(Views.SRIPlayerManagement.DTOPlayer newPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/UpdateEmailPassword", ReplyAction="http://tempuri.org/IPlayerManagement/UpdateEmailPasswordResponse")]
        bool UpdateEmailPassword(Views.SRIPlayerManagement.DTOPlayer dataPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/UpdateEmailPassword", ReplyAction="http://tempuri.org/IPlayerManagement/UpdateEmailPasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmailPasswordAsync(Views.SRIPlayerManagement.DTOPlayer dataPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/UpdateFullProfile", ReplyAction="http://tempuri.org/IPlayerManagement/UpdateFullProfileResponse")]
        bool UpdateFullProfile(Views.SRIPlayerManagement.DTOPlayer dataPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagement/UpdateFullProfile", ReplyAction="http://tempuri.org/IPlayerManagement/UpdateFullProfileResponse")]
        System.Threading.Tasks.Task<bool> UpdateFullProfileAsync(Views.SRIPlayerManagement.DTOPlayer dataPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerManagementChannel : Views.SRIPlayerManagement.IPlayerManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerManagementClient : System.ServiceModel.ClientBase<Views.SRIPlayerManagement.IPlayerManagement>, Views.SRIPlayerManagement.IPlayerManagement {
        
        public PlayerManagementClient() {
        }
        
        public PlayerManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Views.SRIPlayerManagement.DTOPlayer AuthenticateLogin(string username, string password) {
            return base.Channel.AuthenticateLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<Views.SRIPlayerManagement.DTOPlayer> AuthenticateLoginAsync(string username, string password) {
            return base.Channel.AuthenticateLoginAsync(username, password);
        }
        
        public bool RegisterPlayer(Views.SRIPlayerManagement.DTOPlayer newPlayer) {
            return base.Channel.RegisterPlayer(newPlayer);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterPlayerAsync(Views.SRIPlayerManagement.DTOPlayer newPlayer) {
            return base.Channel.RegisterPlayerAsync(newPlayer);
        }
        
        public bool UpdateEmailPassword(Views.SRIPlayerManagement.DTOPlayer dataPlayer) {
            return base.Channel.UpdateEmailPassword(dataPlayer);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmailPasswordAsync(Views.SRIPlayerManagement.DTOPlayer dataPlayer) {
            return base.Channel.UpdateEmailPasswordAsync(dataPlayer);
        }
        
        public bool UpdateFullProfile(Views.SRIPlayerManagement.DTOPlayer dataPlayer) {
            return base.Channel.UpdateFullProfile(dataPlayer);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFullProfileAsync(Views.SRIPlayerManagement.DTOPlayer dataPlayer) {
            return base.Channel.UpdateFullProfileAsync(dataPlayer);
        }
    }
}
